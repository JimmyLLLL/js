服务端可以对 cookie 进行一些关键配置，以保障 cookie 的使用安全，诸如：

HttpOnly cookie：浏览器端 JavaScript 没有读 cookie 权限。
Secure cookie：传输链路只有在特定安全通道（通常指 HTTPS），请求才会自动加入相关 cookie。
SameSite cookie：在跨域情况下，相关 cookie 无法被请求携带，这里主要是为了防止 CSRF 攻击。

为了防御 XSS 攻击，需要开发者设置 httpOnly 选项；为了防御 XSRF，需要开发者设置 SameSite 选项。需要注意，并不是所有浏览器都支持 SameSite。

个人思路：
前提：防好XSS
前端后端同套JWT，secret算法
前端用户密码用secret算法加密payload获得secret，存secret，传secret，payload
后端根据payload生成secret，payload+secret生成token，给前端cookies http-only存
每次请求带secret和cookies
后端直接验证jwt
这样csrf即使进入了网，也读不到secret

持久性：
存的cookies是硬盘cookies，设置了时间就是硬盘cookies，否则是一关必标签就过期的内存cookies